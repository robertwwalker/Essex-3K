---
title: "Animating the Wealth Index of Selected Equities"
author: "RWW"
date: 2019-05-11
slug: tidyquant-meets-gganimate
categories:
  - R
tags: ["R", "time series", "ggplot"]
---

# Some Basic Time Series with Equities

First, let me get some data using `tidyquant`.

## tidyquant

`tidyquant` automates a lot of equity research and calculation using *tidy* concepts.  I will first use it to get the components of the S and P 500 and pick out those with weights over 1.1 percent.  In the next step, I download the data and finally calculate daily returns and a cumulative wealth index.

```{r cars, message=FALSE}
library(tidyquant)
tq_index("SP500") %>% filter(weight > 0.011) %>% select(symbol,company) -> Tickers
Tickers <- Tickers %>% filter(symbol!="BRK.B") %>% filter(symbol!="GOOGL") %>% filter(symbol!="JNJ")
Eq.P <- Tickers %>%  tq_get(., from="2018/01/01", to="2019/05/01") 
Returns <- Eq.P %>% group_by(symbol) %>% tq_transmute(., adjusted, periodReturn, period="daily")
CumulativeReturns <- Eq.P %>% 
  group_by(symbol) %>% 
  tq_transmute(., adjusted, periodReturn, period="daily", type = "log", col_rename = "returns") %>% 
  mutate(wealth.index = 100 * cumprod(1 + returns))
library(skimr)
Returns %>% skim()
```

The final line provides a summary of the returns.  Now let me plot the data.

```{r}
library(ggplot2)
library(ggthemes)
CumulativeReturns %>% ggplot(., aes(x=date, y=wealth.index, color=symbol, group=symbol)) + geom_line() + labs(x="Date", y="Cumulative Wealth [Baseline 100]", color="Ticker") + theme_economist_white()
```
 
And because I can, let me deploy gganimate to reveal the data in an animation.

```{r}
library(gganimate)
p <- CumulativeReturns %>% ggplot(., aes(x=date, y=wealth.index, color=symbol, group=symbol)) + geom_line() + labs(x="Date", y="Cumulative Wealth [Baseline 100]", color="Ticker") + theme_economist_white() + transition_reveal(date)
animate(p)
```

